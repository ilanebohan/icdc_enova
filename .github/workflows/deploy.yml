name: Deploy to Server

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy"
        required: true
        default: "main"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout infra repo
        uses: actions/checkout@v4

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run deploy.sh on server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export ELASTIC_APM_SERVER_URL="${{ secrets.ELASTIC_APM_SERVER_URL }}"
            export APM_API_KEY="${{ secrets.APM_API_KEY }}"
            export ES_HOST="${{ secrets.ES_HOST }}"
            export ES_API_KEY="${{ secrets.ES_API_KEY }}"

            export DB_HOST="${{ secrets.DB_HOST }}"
            export DB_PORT="${{ secrets.DB_PORT }}"
            export MYSQL_USER="${{ secrets.MYSQL_USER }}"
            export MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}"
            export MYSQL_DATABASE="${{ secrets.MYSQL_DATABASE }}"

            export APP_REPO_SSH="${{ secrets.APP_REPO_SSH }}"
            export APP_DIR="/opt/enova"
            export SERVER_DIR="/opt/enova/server"

            for k in ELASTIC_APM_SERVER_URL APM_API_KEY ES_HOST ES_API_KEY DB_HOST DB_PORT MYSQL_USER MYSQL_PASSWORD MYSQL_DATABASE; do
              if [ -n "${!k}" ]; then echo "$k=SET"; else echo "$k=EMPTY"; fi
            done
            
            sudo --preserve-env=ELASTIC_APM_SERVER_URL,APM_API_KEY,ES_HOST,ES_API_KEY,APP_REPO_SSH,APP_DIR,SERVER_DIR \
              bash /opt/enova-deploy/icdc_enova/deploy.sh "${{ github.event.inputs.branch }}"